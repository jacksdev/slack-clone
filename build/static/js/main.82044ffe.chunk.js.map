{"version":3,"sources":["firebase.js","components/Header.js","features/appSlice.js","components/SidebarOption.js","components/SideBar.js","components/ChatInput.js","components/Message.js","components/Chat.js","components/SignIn.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","Header","useAuthState","user","HeaderContainer","HeadLeft","HeadAvatar","onClick","signOut","alt","displayName","src","photoURL","HeaderSearch","placeholder","HeaderRight","styled","div","Avatar","appSlice","createSlice","name","initialState","roomId","reducers","enterRoom","state","action","payload","actions","selectRoomId","app","SidebarOption","Icon","title","addChannelOption","id","dispatch","useDispatch","SidebarOptionContainer","channelName","prompt","collection","add","fontSize","style","padding","SideOptionChannel","h3","SideBar","useCollection","channels","loading","SidebarContainer","SidebarHeader","SidebarInfo","InsertCommentIcon","InboxIcon","DraftsIcon","BookmarBorderIcon","PeaopleAltIcon","AppsIcon","FileCopyIcon","ExpandLessIcon","ExpandMoreIcon","AddIcon","docs","map","doc","data","ChatInput","channelId","chatRef","useState","input","setInput","ChatInputContainer","value","onChange","e","target","Button","hidden","type","preventDefault","console","log","message","timestamp","FieldValue","serverTimestamp","userImage","current","scrollIntoView","behavior","Message","MessageContainer","MessageInfo","Date","toDate","toLocaleDateString","toLocaleTimeString","Chat","useRef","useSelector","useDocument","roomDetails","orderBy","roomMessages","useEffect","ChatContainer","HeaderLeft","ChatMessages","ChatBottom","ref","SignIn","SignInContainer","SignInInnerContainer","border","signInWithPopup","catch","error","alert","App","className","AppBody","path","exact","configureStore","reducer","appReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.82044ffe.chunk.js","sourcesContent":["\r\nimport firebase from 'firebase'\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAvyzDkEFhR9KvX-wNSfKF8gYUagd7JAtY\",\r\n    authDomain: \"slack-clone-a2ac2.firebaseapp.com\",\r\n    projectId: \"slack-clone-a2ac2\",\r\n    storageBucket: \"slack-clone-a2ac2.appspot.com\",\r\n    messagingSenderId: \"315031316562\",\r\n    appId: \"1:315031316562:web:c404ea3c3a59d8ee0fd78b\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig)\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport {auth, provider, db };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Avatar } from '@material-ui/core'\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from '../firebase';\r\n\r\nexport default function Header() {\r\n\r\n    const [user] = useAuthState(auth);\r\n\r\n    return (\r\n        <HeaderContainer>\r\n\r\n            <HeadLeft>\r\n                <HeadAvatar\r\n                    onClick={() => auth.signOut() }\r\n                    alt={user?.displayName}\r\n                    src={user?.photoURL}\r\n                />\r\n                <AccessTimeIcon />\r\n            </HeadLeft>\r\n\r\n            <HeaderSearch>\r\n                <SearchIcon /> \r\n                <input placeholder=\"Search Jacks Coding Channel\" />\r\n            </HeaderSearch>\r\n\r\n            <HeaderRight>\r\n                <HelpOutlineIcon />\r\n            </HeaderRight>\r\n         \r\n        </HeaderContainer>\r\n    )\r\n}\r\n\r\n\r\nconst HeaderContainer = styled.div`\r\n        display: flex;\r\n        position: fixed;\r\n        width: 100%;\r\n        align-items: center;\r\n        justify-content: space-between;\r\n        padding: 10px 0;\r\n        background-color: var(--slack-color);\r\n        color: white;\r\n    `           \r\n\r\nconst HeadLeft = styled.div` \r\n        flex: 0.3;\r\n        display: flex;\r\n        align-items: center;\r\n        margin-left: 20px;\r\n\r\n        > .MuiSvgIcon-root {\r\n            margin-left: auto;\r\n            margin-right: 20px;\r\n        }\r\n\r\n `\r\n\r\nconst HeaderSearch = styled.div`\r\n    flex: 0.4;\r\n    opacity: 1;\r\n    border-radius: 6px;\r\n    background-color: #421f44;\r\n    text-align: center;\r\n    display: flex;\r\n    padding: 0 50px;\r\n    color: gray;\r\n    border: 1px solid grey;\r\n\r\n    > input {\r\n        background-color: transparent;\r\n        border: none;\r\n        text-align: center;\r\n        min-width: 30vw;\r\n        outline: 0;\r\n        color: white;\r\n    }\r\n\r\n`\r\n\r\nconst HeaderRight = styled.div`\r\n    flex: 0.3;\r\n    display: flex;\r\n    align-items: flex-end;\r\n    \r\n    > .MuiSvgIcon-root {\r\n            margin-left: auto;\r\n            margin-right: 20px;\r\n        }\r\n\r\n`\r\n\r\n\r\nconst HeadAvatar = styled(Avatar)`\r\n    cursor: pointer;\r\n    :hover{\r\n        opacity: 0.8;\r\n    }\r\n`","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const appSlice = createSlice({\r\n  name: 'app',\r\n  initialState: {\r\n    roomId: null,\r\n  },\r\n  reducers: {\r\n    enterRoom: (state, action) => { \r\n      state.roomId = action.payload.roomId;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { enterRoom } = appSlice.actions;\r\n\r\nexport const selectRoomId = state => state.app.roomId;\r\n\r\nexport default appSlice.reducer;\r\n","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport {db} from '../firebase';\r\nimport { useDispatch } from 'react-redux'\r\nimport { enterRoom } from '../features/appSlice';\r\n\r\n\r\nfunction SidebarOption({ Icon, title, addChannelOption, id }) {\r\n \r\n    const dispatch = useDispatch();\r\n\r\n    const addChannel = () => {\r\n\r\n        const channelName = prompt('Please endter channel name');\r\n\r\n        if(channelName){\r\n            db.collection('rooms').add({\r\n                name: channelName, \r\n            })\r\n        }\r\n    };\r\n\r\n    const selectChannel = () => {\r\n    \r\n        if(id){\r\n            dispatch(enterRoom({\r\n                roomId: id\r\n            }))\r\n        }\r\n\r\n\r\n    };\r\n\r\n\r\n    return (\r\n        <SidebarOptionContainer\r\n            onClick={addChannelOption ? addChannel : selectChannel}\r\n        >\r\n\r\n            { Icon && <Icon fontSize=\"small\" style={{ padding: 10 }} />}\r\n            { Icon ? (\r\n                <h3>{title}</h3>\r\n            ): (\r\n                <SideOptionChannel>\r\n                    <span>#</span> {title}\r\n                </SideOptionChannel>\r\n            ) }\r\n\r\n\r\n        </SidebarOptionContainer>\r\n    )\r\n}\r\n\r\nexport default SidebarOption\r\n\r\n\r\n\r\n\r\nconst SidebarOptionContainer = styled.div`\r\n    display: flex;\r\n    font-size: 12px;\r\n    align-items: center;\r\n    padding-right: 2px;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n        opacity: 0.9;\r\n        background-color: #340e36;\r\n    }\r\n\r\n    > h3 {\r\n        font-weight: 500;\r\n    }\r\n\r\n    > h3 > span {\r\n        padding: 15px;\r\n    }\r\n`\r\n\r\nconst SideOptionChannel = styled.h3`\r\n    padding: 10px 0;\r\n    font-weight: 300;\r\n`","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\n\r\nimport InsertCommentIcon from '@material-ui/icons/InsertComment'\r\nimport InboxIcon from '@material-ui/icons/Inbox'\r\nimport DraftsIcon from '@material-ui/icons/Drafts'\r\nimport BookmarBorderIcon from '@material-ui/icons/BookmarkBorderOutlined'\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy'\r\nimport PeaopleAltIcon from '@material-ui/icons/PeopleAlt'\r\nimport AppsIcon from '@material-ui/icons/Apps'\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess'\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\r\nimport AddIcon from '@material-ui/icons/Add'\r\n\r\nimport SidebarOption from './SidebarOption'\r\nimport { useCollection } from  'react-firebase-hooks/firestore'\r\nimport { db, auth } from '../firebase'\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\n\r\nfunction SideBar() {      \r\n\r\n    const [user] = useAuthState(auth);\r\n    const [channels, loading, error] = useCollection(db.collection('rooms'))\r\n\r\n\r\n    return (\r\n        <SidebarContainer>\r\n            <SidebarHeader>\r\n                <SidebarInfo>\r\n                    <h2>Jacks Coding Channel</h2>\r\n                    <h3>\r\n                        <FiberManualRecordIcon />\r\n                        \r\n                        {loading ? 'Loading...' : user?.displayName}\r\n                    </h3>\r\n                </SidebarInfo>\r\n                <CreateIcon />\r\n\r\n            </SidebarHeader>\r\n\r\n            <SidebarOption Icon={InsertCommentIcon} title=\"Threads\" />\r\n            <SidebarOption Icon={InboxIcon} title=\"Mentions & Reactions\" />\r\n            <SidebarOption Icon={DraftsIcon} title=\"Saved Items\" />\r\n            <SidebarOption Icon={BookmarBorderIcon} title=\"Channel browser\" />\r\n            <SidebarOption Icon={PeaopleAltIcon} title=\"People & user groups\" />\r\n            <SidebarOption Icon={AppsIcon} title=\"Apps\" />\r\n            <SidebarOption Icon={FileCopyIcon} title=\"File browser\" />\r\n            <SidebarOption Icon={ExpandLessIcon} title=\"Show less\" />\r\n\r\n            <hr />\r\n\r\n            <SidebarOption Icon={ExpandMoreIcon} title=\"Channels\" />\r\n\r\n            <hr />\r\n\r\n            <SidebarOption Icon={AddIcon} addChannelOption title=\"Add Channel\" />\r\n\r\n            {channels?.docs.map(doc => (\r\n                <SidebarOption \r\n                    key={doc.id} \r\n                    id={doc.id} \r\n                    title={doc.data().name} \r\n                />\r\n            ))}\r\n\r\n        </SidebarContainer>\r\n    )\r\n}\r\n\r\nexport default SideBar;\r\n\r\n\r\n\r\nconst SidebarContainer = styled.div`\r\n    flex: 0.3;\r\n    color: white;\r\n    background-color: var(--slack-color);\r\n    margin-top: 60px;\r\n    max-width: 260px;\r\n    border-top: 1px solid #49274b;\r\n\r\n    > hr {\r\n        margin-top: 10px;\r\n        margin-bottom: 10px;\r\n        border: 1px solid #49274b;\r\n    }\r\n`\r\n\r\nconst SidebarHeader = styled.div`\r\n    display: flex;\r\n    border-bottom: 1px solid #49274b;\r\n    padding: 12px;\r\n\r\n    > .MuiSvgIcon-root {\r\n        padding: 8px;\r\n        color: #49274b;\r\n        font-size: 18px;\r\n        background-color: white;\r\n        border-radius: 999px;\r\n    }\r\n`\r\n\r\nconst SidebarInfo = styled.div`\r\n    flex: 1;\r\n    \r\n    > h2 {\r\n        font-size: 15px;\r\n        font-weight: 900;\r\n        margin-bottom: 5px;\r\n    }\r\n\r\n    > h3 {\r\n        display: flex;\r\n        font-size:13px;\r\n        font-weight:400;\r\n        align-items:center;\r\n    }\r\n\r\n    > h3 > .MuiSvgIcon-root {\r\n        font-size: 14px;\r\n        margin-top: 1px;\r\n        margin-right: 2px;\r\n        color: green;\r\n    }\r\n\r\n`","import { Button } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { db, auth } from '../firebase';\r\nimport firebase from 'firebase'\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\n\r\nfunction ChatInput({ channelName, channelId, chatRef}) {\r\n\r\n    const [input, setInput] = useState(\"\");\r\n    const [user] = useAuthState(auth);\r\n\r\n    const sendMessage = e => {\r\n\r\n        e.preventDefault();\r\n\r\n        console.log(user.photoURL)\r\n        \r\n        if(!channelId){\r\n            return false;\r\n        }\r\n\r\n        db.collection('rooms').doc(channelId).collection(\"messages\").add({\r\n            message: input,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n            user: user?.displayName,\r\n            userImage: user?.photoURL\r\n        });\r\n\r\n        chatRef?.current?.scrollIntoView({\r\n            behavior: 'smooth'\r\n        })\r\n\r\n        setInput('')\r\n    };\r\n\r\n\r\n    return (\r\n        <ChatInputContainer>\r\n            <form action=\"\">\r\n                <input \r\n                    value={input} \r\n                    onChange = {(e) => setInput(e.target.value)}\r\n                    placeholder={`Message #${channelName}`} \r\n                />\r\n                <Button hidden type='submit' onClick={sendMessage}>\r\n                    SEND\r\n                </Button>\r\n            </form>\r\n            \r\n        </ChatInputContainer>\r\n    )\r\n}\r\n\r\nexport default ChatInput\r\n\r\n\r\nconst ChatInputContainer = styled.div`\r\n    border-radius: 20px;\r\n\r\n    > form {\r\n        position: relative;\r\n        display: flex;\r\n        justify-content:center;\r\n    }\r\n\r\n    > form > input {\r\n        position: fixed;\r\n        bottom: 30px;\r\n        width: 60%;\r\n        border: 1px solid gray;\r\n        padding: 20px;\r\n        outline: none;\r\n    }\r\n\r\n    > form > button {\r\n        display: none !important;\r\n    }\r\n`","import React from 'react'\r\nimport styled from 'styled-components';\r\nimport Moment from 'react-moment';\r\n\r\n\r\nfunction Message({ message, timestamp, user, userImage }) {\r\n    return (\r\n        <MessageContainer>\r\n            <img src={userImage} alt='' />\r\n            <MessageInfo>\r\n                <h4>\r\n                    {user} <span>{new Date(timestamp?.toDate()).toLocaleDateString()} {new Date(timestamp?.toDate()).toLocaleTimeString()}</span>\r\n                </h4>\r\n                <p>\r\n                    {message}\r\n                </p> \r\n            </MessageInfo>\r\n        </MessageContainer>\r\n        \r\n    )\r\n}\r\n\r\nexport default Message;\r\n\r\n\r\nconst MessageContainer = styled.div`\r\n    display:flex;\r\n    align-items: center;\r\n    padding: 20px;\r\n\r\n    > img {\r\n        height: 50px;\r\n        border-radius: 8px;\r\n    }\r\n`\r\n\r\nconst MessageInfo = styled.div`\r\n    padding-left: 10px;\r\n\r\n    > h4 > span {\r\n        color: grey;\r\n        font-weight: 300;\r\n        margin-left: 4px;\r\n        font-size: 10px;\r\n    }\r\n`","import React, { useRef, useEffect } from 'react'\r\nimport styled from 'styled-components';\r\nimport StarBorderedOutlineIcon from '@material-ui/icons/StarBorderOutlined';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined'\r\nimport ChatInput from './ChatInput';\r\nimport Message from './Message';\r\nimport { useSelector } from 'react-redux'\r\nimport { selectRoomId } from '../features/appSlice';\r\n\r\nimport { useCollection, useDocument } from 'react-firebase-hooks/firestore'\r\nimport { db } from '../firebase';\r\n\r\nfunction Chat() {\r\n\r\n    const chatRef = useRef(null);\r\n\r\n    const roomId = useSelector(selectRoomId);\r\n\r\n    const [roomDetails] = useDocument(\r\n        roomId && db.collection(\"rooms\").doc(roomId)\r\n    )\r\n\r\n    const [roomMessages, loading] = useCollection(\r\n        roomId && \r\n        db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n    )\r\n\r\n    useEffect(() => {\r\n        chatRef?.current?.scrollIntoView({\r\n            behavior: 'smooth'\r\n        })\r\n    }, [roomId, loading])\r\n\r\n    return (\r\n        <ChatContainer>\r\n            {roomId && roomMessages && (\r\n                <>\r\n                <Header>\r\n                    <HeaderLeft>\r\n                        <h4>#{roomDetails?.data().name}</h4>\r\n                        <StarBorderedOutlineIcon />\r\n                    </HeaderLeft>\r\n                    <HeaderRight>\r\n                        <p>\r\n                            <InfoOutlinedIcon /> Details\r\n                        </p>\r\n                    </HeaderRight>\r\n                </Header>\r\n\r\n                <ChatMessages>\r\n                                \r\n                    {\r\n                    \r\n                    roomMessages?.docs.map(\r\n                            (doc) => {\r\n\r\n                                const { message, timestamp, user, userImage} = doc.data();\r\n\r\n                                return <Message \r\n                                    key={doc.id}\r\n                                    message={message}\r\n                                    timestamp={timestamp}\r\n                                    user={user}\r\n                                    userImage={userImage}\r\n                                />\r\n                            }\r\n                        )\r\n                    }\r\n                    \r\n                </ChatMessages>\r\n\r\n                <ChatBottom ref={chatRef}/>\r\n\r\n                <ChatInput\r\n                    chatRef={chatRef}\r\n                    channelName = {roomDetails?.data().name}\r\n                    channelId = {roomId}\r\n                />\r\n            </>\r\n            )}\r\n            \r\n        </ChatContainer>\r\n    )\r\n}\r\n\r\nexport default Chat;\r\n\r\n\r\nconst ChatContainer = styled.div`\r\n    flex: 0.7;\r\n    flex-grow: 1;\r\n    overflow-y: scroll;\r\n    margin-top: 60px;\r\n`\r\n\r\nconst Header = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 20px;\r\n    border-bottom: 1px solid lightgrey;\r\n`;\r\n\r\nconst HeaderLeft = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    > h4 {\r\n        display: flex;\r\n        text-transform: lowercase;\r\n        margin-right: 10px;\r\n    }\r\n\r\n    > h4 > .MuiSvgIcon-root {\r\n        margin-left: 10px;\r\n        font-size: 18px;\r\n    }\r\n`;\r\n\r\nconst HeaderRight = styled.div`\r\n    > p {\r\n        display: flex;\r\n        align-items: center;\r\n        font-size: 14;\r\n    }\r\n\r\n    > p > .MuiSvgIcon-root {\r\n        margin-right: 5px !important;\r\n        font-size: 16px;\r\n    }\r\n`;\r\n\r\nconst ChatMessages = styled.div`\r\n\r\n`\r\n\r\nconst ChatBottom = styled.div`\r\n    padding-bottom: 200px;\r\n`","import { Button } from '@material-ui/core';\r\nimport React from 'react'\r\nimport styled from 'styled-components';\r\nimport { auth, provider } from '../firebase';\r\n\r\nfunction SignIn() {\r\n\r\n    const signInSubmit = e => {\r\n        e.preventDefault();\r\n        auth.signInWithPopup(provider).catch((error) => {\r\n            alert(error.message);\r\n        })\r\n    }\r\n    return (\r\n        <SignInContainer>\r\n            <SignInInnerContainer>\r\n                <img src=\"https://cdn.mos.cms.futurecdn.net/SDDw7CnuoUGax6x9mTo7dd.jpg\" border=\"0\" />\r\n                <h1>Slack UI study </h1>\r\n                <p>built with</p>\r\n                <p>REACT - REDUX - FIREBASE - STYLED COMPONENTS</p>\r\n                \r\n                <h4>Log in for demo</h4>\r\n                <Button type='submit' onClick={signInSubmit}>\r\n                    Sign in with google\r\n                </Button>\r\n            </SignInInnerContainer>\r\n        </SignInContainer>\r\n    )\r\n}\r\n\r\nexport default SignIn\r\n\r\n\r\nconst SignInContainer = styled.div`\r\n    background-color: #f8f8f8;\r\n    height: 100vh;\r\n    display: grid;\r\n    place-items: center;\r\n`\r\n\r\nconst SignInInnerContainer = styled.div`\r\n    padding: 100px;\r\n    text-align: center;\r\n    background-color: white;\r\n    border-radius: 10px;\r\n\r\n    > h4 {\r\n        margin-top:20px;\r\n    }\r\n\r\n    > img {\r\n        object-fit: contain;\r\n        height: 100px;\r\n        margin-bottom: 40px;\r\n    }\r\n    > Button {\r\n        margin-top: 20px;\r\n        text-transform: inherit !important;\r\n        background-color: #0a8d48;\r\n        color: white;\r\n        padding: 15px;\r\n        font-size: 16px;\r\n        : hover {\r\n            color: black;\r\n        }\r\n    }\r\n`","import React from 'react';\r\nimport Header from './components/Header';\r\nimport SideBar from './components/SideBar';\r\nimport styled from 'styled-components';\r\nimport './App.css';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from \"react-router-dom\";\r\nimport Chat from './components/Chat'\r\nimport { useAuthState } from 'react-firebase-hooks/auth';\r\nimport { auth } from './firebase';\r\nimport SignIn from './components/SignIn';\r\n\r\nfunction App() {\r\n\r\n  const  [user, loading] = useAuthState(auth)\r\n  return (\r\n    <div className=\"app\">\r\n      \r\n      <Router>\r\n        {!user ? (\r\n          <SignIn />\r\n        ) : (\r\n          <>\r\n            <Header />\r\n            <AppBody>\r\n              <SideBar />\r\n              <Switch>\r\n                <Route path=\"/\" exact>\r\n                  <Chat />\r\n                </Route>\r\n              </Switch>\r\n            </AppBody>\r\n          </>\r\n        )}\r\n        \r\n      </Router>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n\r\nconst AppBody = styled.div`\r\n  display: flex;\r\n  height: 100vh;\r\n\r\n`","import { configureStore } from '@reduxjs/toolkit';\r\nimport appReducer from '../features/appSlice';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    app: appReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}